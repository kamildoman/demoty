{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\login\\\\Documents\\\\python\\\\demotywatory\\\\demoty\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import React,{useState,useEffect}from\"react\";import axios from\"axios\";import Demot from\"./Demot\";import Navbar from'./Navbar';import Pagination from'./Pagination';import SinglePageDemot from\"./SinglePageDemot\";import'./App.css';import{BrowserRouter as Router,Routes,Route}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),demots=_useState2[0],setDemots=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),currentPage=_useState4[0],setCurrentPage=_useState4[1];var _useState5=useState(5),_useState6=_slicedToArray(_useState5,1),postsPerPage=_useState6[0];var refreshList=function refreshList(){axios.get('/api/demots/').then(function(response){setDemots(response.data.reverse());});};useEffect(function(){refreshList();},[]);var indexOfLastPost=currentPage*postsPerPage;var indexOfFirstPost=indexOfLastPost-postsPerPage;var currentPosts=demots.slice(indexOfFirstPost,indexOfLastPost);function paginate(pageNumber){setCurrentPage(pageNumber);}return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navbar,{setCurrentPage:setCurrentPage,refresh:refreshList}),/*#__PURE__*/_jsx(\"div\",{className:\"main\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",exact:true,element:/*#__PURE__*/_jsxs(_Fragment,{children:[currentPosts.map(function(demot){return/*#__PURE__*/_jsx(Demot,{id:demot.id,whole:true,title:demot.title,subtitle:demot.subtitle,image:demot.image,upvote:demot.upvote,downvote:demot.downvote,ips:demot.ips},demot.id);}),/*#__PURE__*/_jsx(Pagination,{postsPerPage:postsPerPage,totalPosts:demots.length,paginate:paginate})]})}),/*#__PURE__*/_jsx(Route,{path:\"/demot/:id\",element:/*#__PURE__*/_jsx(SinglePageDemot,{})})]})})]})});}export default App;","map":{"version":3,"sources":["C:/Users/login/Documents/python/demotywatory/demoty/src/App.js"],"names":["React","useState","useEffect","axios","Demot","Navbar","Pagination","SinglePageDemot","BrowserRouter","Router","Routes","Route","App","demots","setDemots","currentPage","setCurrentPage","postsPerPage","refreshList","get","then","response","data","reverse","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","map","demot","id","title","subtitle","image","upvote","downvote","ips","length"],"mappings":"qJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAO,WAAP,CACA,OACEC,aAAa,GAAIC,CAAAA,MADnB,CAEEC,MAFF,CAGEC,KAHF,KAIO,kBAJP,C,6IASA,QAASC,CAAAA,GAAT,EAAe,CACb,cAA4BX,QAAQ,CAAC,EAAD,CAApC,wCAAOY,MAAP,eAAeC,SAAf,eACA,eAAsCb,QAAQ,CAAC,CAAD,CAA9C,yCAAOc,WAAP,eAAoBC,cAApB,eACA,eAAuBf,QAAQ,CAAC,CAAD,CAA/B,yCAAOgB,YAAP,eAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtBf,KAAK,CAACgB,GAAN,CAAU,cAAV,EACCC,IADD,CACM,SAAUC,QAAV,CAAoB,CACxBP,SAAS,CAACO,QAAQ,CAACC,IAAT,CAAcC,OAAd,EAAD,CAAT,CACD,CAHD,EAID,CALH,CAOErB,SAAS,CAAC,UAAM,CACdgB,WAAW,GACZ,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAMM,CAAAA,eAAe,CAAGT,WAAW,CAAGE,YAAtC,CACA,GAAMQ,CAAAA,gBAAgB,CAAGD,eAAe,CAAGP,YAA3C,CACA,GAAMS,CAAAA,YAAY,CAAGb,MAAM,CAACc,KAAP,CAAaF,gBAAb,CAA+BD,eAA/B,CAArB,CAEA,QAASI,CAAAA,QAAT,CAAkBC,UAAlB,CAA6B,CAC3Bb,cAAc,CAACa,UAAD,CAAd,CACD,CAED,mBAAQ,KAAC,MAAD,wBAAQ,oCACN,KAAC,MAAD,EAAQ,cAAc,CAAEb,cAAxB,CAAwC,OAAO,CAAEE,WAAjD,EADM,cAEN,YAAK,SAAS,CAAC,MAAf,uBACA,MAAC,MAAD,yBACA,KAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,CAAgB,KAAK,KAArB,CAAsB,OAAO,cAAG,2BAAGQ,YAAY,CAACI,GAAb,CAAiB,SAAAC,KAAK,qBACzD,KAAC,KAAD,EAEA,EAAE,CAAIA,KAAK,CAACC,EAFZ,CAGA,KAAK,CAAI,IAHT,CAIA,KAAK,CAAED,KAAK,CAACE,KAJb,CAKA,QAAQ,CAAEF,KAAK,CAACG,QALhB,CAMA,KAAK,CAAEH,KAAK,CAACI,KANb,CAOA,MAAM,CAAEJ,KAAK,CAACK,MAPd,CAQA,QAAQ,CAAEL,KAAK,CAACM,QARhB,CASA,GAAG,CAAEN,KAAK,CAACO,GATX,EACMP,KAAK,CAACC,EADZ,CADyD,EAAtB,CAAH,cAY/B,KAAC,UAAD,EACH,YAAY,CAAEf,YADX,CAEH,UAAU,CAAEJ,MAAM,CAAC0B,MAFhB,CAGH,QAAQ,CAAEX,QAHP,EAZ+B,GAAhC,EADA,cAmBF,KAAC,KAAD,EAAO,IAAI,CAAC,YAAZ,CAAyB,OAAO,cAAE,KAAC,eAAD,IAAlC,EAnBE,GADA,EAFM,GAAR,EAAR,CA6BD,CAEH,cAAehB,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Demot from \"./Demot\"\nimport Navbar from './Navbar'\nimport Pagination from './Pagination'\nimport SinglePageDemot from \"./SinglePageDemot\";\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\n\n\n\nfunction App() {\n  const [demots, setDemots] = useState([])\n  const [currentPage, setCurrentPage] = useState(1)\n  const [postsPerPage] = useState(5)\n\n  const refreshList = () => {\n      axios.get('/api/demots/')\n      .then(function (response) {\n        setDemots(response.data.reverse()) \n      })\n    };\n\n    useEffect(() => {\n      refreshList()\n    }, [])\n    \n    const indexOfLastPost = currentPage * postsPerPage\n    const indexOfFirstPost = indexOfLastPost - postsPerPage\n    const currentPosts = demots.slice(indexOfFirstPost, indexOfLastPost)\n\n    function paginate(pageNumber){\n      setCurrentPage(pageNumber)\n    }\n\n    return (<Router><div>\n              <Navbar setCurrentPage={setCurrentPage} refresh={refreshList}/>\n              <div className=\"main\">\n              <Routes>\n              <Route path=\"/\" exact element= {<>{currentPosts.map(demot =>(\n              <Demot\n              key= {demot.id} \n              id = {demot.id}\n              whole = {true}\n              title={demot.title}\n              subtitle={demot.subtitle}  \n              image={demot.image}\n              upvote={demot.upvote}\n              downvote={demot.downvote}\n              ips={demot.ips}\n              />\n            ))}<Pagination \n            postsPerPage={postsPerPage} \n            totalPosts={demots.length} \n            paginate={paginate}  \n            /></>} />\n\n            <Route path=\"/demot/:id\" element={<SinglePageDemot />} />\n            </Routes>\n            \n            </div>\n           \n            </div></Router>)\n    \n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}