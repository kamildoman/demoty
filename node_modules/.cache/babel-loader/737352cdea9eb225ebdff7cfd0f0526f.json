{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\login\\\\Documents\\\\python\\\\demotywatory\\\\demoty\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Demot from \"./Demot\";\nimport Navbar from './Navbar';\nimport Pagination from './Pagination';\nimport SinglePageDemot from \"./SinglePageDemot\";\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [demots, setDemots] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(5);\n\n  const refreshList = () => {\n    axios.get('/api/').then(function (response) {\n      setDemots(response.data.reverse());\n    });\n  };\n\n  useEffect(() => {\n    refreshList();\n  }, []);\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = demots.slice(indexOfFirstPost, indexOfLastPost);\n\n  function paginate(pageNumber) {\n    setCurrentPage(pageNumber);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        setCurrentPage: setCurrentPage,\n        refresh: refreshList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [currentPosts.map(demot => /*#__PURE__*/_jsxDEV(Demot, {\n                id: demot.id,\n                whole: true,\n                title: demot.title,\n                subtitle: demot.subtitle,\n                image: demot.image,\n                upvote: demot.upvote,\n                downvote: demot.downvote,\n                ips: demot.ips\n              }, demot.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 15\n              }, this)), /*#__PURE__*/_jsxDEV(Pagination, {\n                postsPerPage: postsPerPage,\n                totalPosts: demots.length,\n                paginate: paginate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 16\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/demot/:id\",\n            element: /*#__PURE__*/_jsxDEV(SinglePageDemot, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 13\n  }, this);\n}\n\n_s(App, \"xrGGnZZO82YIz7NbqFGyK4WbwhU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/login/Documents/python/demotywatory/demoty/src/App.js"],"names":["React","useState","useEffect","axios","Demot","Navbar","Pagination","SinglePageDemot","BrowserRouter","Router","Routes","Route","App","demots","setDemots","currentPage","setCurrentPage","postsPerPage","refreshList","get","then","response","data","reverse","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","map","demot","id","title","subtitle","image","upvote","downvote","ips","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Demot from \"./Demot\"\nimport Navbar from './Navbar'\nimport Pagination from './Pagination'\nimport SinglePageDemot from \"./SinglePageDemot\";\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\n\n\n\nfunction App() {\n  const [demots, setDemots] = useState([])\n  const [currentPage, setCurrentPage] = useState(1)\n  const [postsPerPage] = useState(5)\n\n  const refreshList = () => {\n      axios.get('/api/')\n      .then(function (response) {\n        setDemots(response.data.reverse()) \n      })\n    };\n\n    useEffect(() => {\n      refreshList()\n    }, [])\n    \n    const indexOfLastPost = currentPage * postsPerPage\n    const indexOfFirstPost = indexOfLastPost - postsPerPage\n    const currentPosts = demots.slice(indexOfFirstPost, indexOfLastPost)\n\n    function paginate(pageNumber){\n      setCurrentPage(pageNumber)\n    }\n\n    return (<Router><div>\n              <Navbar setCurrentPage={setCurrentPage} refresh={refreshList}/>\n              <div className=\"main\">\n              <Routes>\n              <Route path=\"/\" exact element= {<>{currentPosts.map(demot =>(\n              <Demot\n              key= {demot.id} \n              id = {demot.id}\n              whole = {true}\n              title={demot.title}\n              subtitle={demot.subtitle}  \n              image={demot.image}\n              upvote={demot.upvote}\n              downvote={demot.downvote}\n              ips={demot.ips}\n              />\n            ))}<Pagination \n            postsPerPage={postsPerPage} \n            totalPosts={demots.length} \n            paginate={paginate}  \n            /></>} />\n\n            <Route path=\"/demot/:id\" element={<SinglePageDemot />} />\n            </Routes>\n            \n            </div>\n           \n            </div></Router>)\n    \n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}