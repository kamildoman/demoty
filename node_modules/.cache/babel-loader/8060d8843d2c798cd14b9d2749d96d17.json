{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\login\\\\Documents\\\\python\\\\demotywatory\\\\demoty\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Demot from \"./Demot\";\nimport Navbar from './Navbar';\nimport Pagination from './Pagination';\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [demots, setDemots] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(5);\n\n  const refreshList = () => {\n    axios.get('http://127.0.0.1:8000/api/').then(function (response) {\n      console.log(response);\n      setDemots(response.data.reverse());\n    });\n    console.log(\"refreshed\");\n  };\n\n  useEffect(() => {\n    refreshList();\n  }, []);\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = demots.slice(indexOfFirstPost, indexOfLastPost);\n\n  function paginate(pageNumber) {\n    setCurrentPage(pageNumber);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        setCurrentPage: setCurrentPage,\n        refresh: refreshList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(Routes, {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: currentPosts.map(demot => /*#__PURE__*/_jsxDEV(Demot, {\n              id: demot.id,\n              whole: true,\n              title: demot.title,\n              subtitle: demot.subtitle,\n              image: demot.image,\n              upvote: demot.upvote,\n              downvote: demot.downvote,\n              ips: demot.ips\n            }, demot.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          postsPerPage: postsPerPage,\n          totalPosts: demots.length,\n          paginate: paginate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 13\n  }, this);\n}\n\n_s(App, \"xrGGnZZO82YIz7NbqFGyK4WbwhU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/login/Documents/python/demotywatory/demoty/src/App.js"],"names":["React","useState","useEffect","axios","Demot","Navbar","Pagination","BrowserRouter","Router","Routes","Route","App","demots","setDemots","currentPage","setCurrentPage","postsPerPage","refreshList","get","then","response","console","log","data","reverse","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","map","demot","id","title","subtitle","image","upvote","downvote","ips","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,WAAP;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,QAIO,kBAJP;;;AASA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACe,YAAD,IAAiBf,QAAQ,CAAC,CAAD,CAA/B;;AAEA,QAAMgB,WAAW,GAAG,MAAM;AACtBd,IAAAA,KAAK,CAACe,GAAN,CAAU,4BAAV,EACCC,IADD,CACM,UAAUC,QAAV,EAAoB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAP,MAAAA,SAAS,CAACO,QAAQ,CAACG,IAAT,CAAcC,OAAd,EAAD,CAAT;AACD,KAJD;AAKAH,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,GAPH;;AASEpB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMQ,eAAe,GAAGX,WAAW,GAAGE,YAAtC;AACA,QAAMU,gBAAgB,GAAGD,eAAe,GAAGT,YAA3C;AACA,QAAMW,YAAY,GAAGf,MAAM,CAACgB,KAAP,CAAaF,gBAAb,EAA+BD,eAA/B,CAArB;;AAEA,WAASI,QAAT,CAAkBC,UAAlB,EAA6B;AAC3Bf,IAAAA,cAAc,CAACe,UAAD,CAAd;AACD;;AAED,sBAAQ,QAAC,MAAD;AAAA,2BAAQ;AAAA,8BACN,QAAC,MAAD;AAAQ,QAAA,cAAc,EAAEf,cAAxB;AAAwC,QAAA,OAAO,EAAEE;AAAjD;AAAA;AAAA;AAAA;AAAA,cADM,eAEN;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACA,QAAC,MAAD;AAAA,iCACA,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,GAAZ;AAAgB,YAAA,OAAO,EAAGU,YAAY,CAACI,GAAb,CAAiBC,KAAK,iBAChD,QAAC,KAAD;AAEA,cAAA,EAAE,EAAIA,KAAK,CAACC,EAFZ;AAGA,cAAA,KAAK,EAAI,IAHT;AAIA,cAAA,KAAK,EAAED,KAAK,CAACE,KAJb;AAKA,cAAA,QAAQ,EAAEF,KAAK,CAACG,QALhB;AAMA,cAAA,KAAK,EAAEH,KAAK,CAACI,KANb;AAOA,cAAA,MAAM,EAAEJ,KAAK,CAACK,MAPd;AAQA,cAAA,QAAQ,EAAEL,KAAK,CAACM,QARhB;AASA,cAAA,GAAG,EAAEN,KAAK,CAACO;AATX,eACMP,KAAK,CAACC,EADZ;AAAA;AAAA;AAAA;AAAA,oBAD0B;AAA1B;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADA,eAgBF,QAAC,UAAD;AACA,UAAA,YAAY,EAAEjB,YADd;AAEA,UAAA,UAAU,EAAEJ,MAAM,CAAC4B,MAFnB;AAGA,UAAA,QAAQ,EAAEX;AAHV;AAAA;AAAA;AAAA;AAAA,gBAhBE;AAAA;AAAA;AAAA;AAAA;AAAA,cAFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA,UAAR;AA2BD;;GArDMlB,G;;KAAAA,G;AAuDT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Demot from \"./Demot\"\nimport Navbar from './Navbar'\nimport Pagination from './Pagination'\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\n\n\n\nfunction App() {\n  const [demots, setDemots] = useState([])\n  const [currentPage, setCurrentPage] = useState(1)\n  const [postsPerPage] = useState(5)\n\n  const refreshList = () => {\n      axios.get('http://127.0.0.1:8000/api/')\n      .then(function (response) {\n        console.log(response)\n        setDemots(response.data.reverse()) \n      })\n      console.log(\"refreshed\")\n    };\n\n    useEffect(() => {\n      refreshList()\n    }, [])\n    \n    const indexOfLastPost = currentPage * postsPerPage\n    const indexOfFirstPost = indexOfLastPost - postsPerPage\n    const currentPosts = demots.slice(indexOfFirstPost, indexOfLastPost)\n\n    function paginate(pageNumber){\n      setCurrentPage(pageNumber)\n    }\n\n    return (<Router><div>\n              <Navbar setCurrentPage={setCurrentPage} refresh={refreshList}/>\n              <div className=\"main\">\n              <Routes>\n              <Route path=\"/\" element= {currentPosts.map(demot =>(\n              <Demot\n              key= {demot.id} \n              id = {demot.id}\n              whole = {true}\n              title={demot.title}\n              subtitle={demot.subtitle}  \n              image={demot.image}\n              upvote={demot.upvote}\n              downvote={demot.downvote}\n              ips={demot.ips}\n              />\n            ))} />\n            </Routes>\n            <Pagination \n            postsPerPage={postsPerPage} \n            totalPosts={demots.length} \n            paginate={paginate}  \n            />\n            </div>\n           \n            </div></Router>)\n    \n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}