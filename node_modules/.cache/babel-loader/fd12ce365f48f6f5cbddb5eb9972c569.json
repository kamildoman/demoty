{"ast":null,"code":"import _asyncToGenerator from\"C:\\\\Users\\\\login\\\\Documents\\\\python\\\\demotywatory\\\\demoty\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\Users\\\\login\\\\Documents\\\\python\\\\demotywatory\\\\demoty\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\login\\\\Documents\\\\python\\\\demotywatory\\\\demoty\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useEffect}from'react';import{useParams}from'react-router-dom';import axios from\"axios\";import Demot from'./Demot';import{jsx as _jsx}from\"react/jsx-runtime\";var SinglePageDemot=function SinglePageDemot(){var _useParams=useParams(),id=_useParams.id;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),demot=_useState2[0],setDemot=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),doesExist=_useState4[0],setDoesExist=_useState4[1];useEffect(function(){function getData(){return _getData.apply(this,arguments);}function _getData(){_getData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:axios.get('/api/'+id+'/').then(function(response){setDemot(response===null||response===void 0?void 0:response.data);}).catch(function(e){if(e.response.status===404){setDoesExist(false);}});case 1:case\"end\":return _context.stop();}}},_callee);}));return _getData.apply(this,arguments);}getData();},[id]);if(doesExist){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Demot,{id:demot.id,whole:true,title:demot.title,subtitle:demot.subtitle,image:demot.image,upvote:demot.upvote,downvote:demot.downvote,ips:demot.ips},demot.id)});}else{return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h2\",{children:\"Sorry, it doesn't exist\"})});}};export default SinglePageDemot;","map":{"version":3,"sources":["C:/Users/login/Documents/python/demotywatory/demoty/src/SinglePageDemot.jsx"],"names":["React","useState","useEffect","useParams","axios","Demot","SinglePageDemot","id","demot","setDemot","doesExist","setDoesExist","getData","get","then","response","data","catch","e","status","title","subtitle","image","upvote","downvote","ips"],"mappings":"icAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,OAAQC,SAAR,KAAwB,kBAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,C,2CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC1B,eAAaH,SAAS,EAAtB,CAAOI,EAAP,YAAOA,EAAP,CACA,cAA0BN,QAAQ,CAAC,EAAD,CAAlC,wCAAOO,KAAP,eAAcC,QAAd,eACA,eAAkCR,QAAQ,CAAC,IAAD,CAA1C,yCAAOS,SAAP,eAAkBC,YAAlB,eAEAT,SAAS,CAAC,UAAM,SACGU,CAAAA,OADH,+HACZ,mIACIR,KAAK,CAACS,GAAN,CAAU,QAAUN,EAAV,CAAc,GAAxB,EACCO,IADD,CACM,SAAUC,QAAV,CAAoB,CAClBN,QAAQ,CAACM,QAAD,SAACA,QAAD,iBAACA,QAAQ,CAAEC,IAAX,CAAR,CACP,CAHD,EAICC,KAJD,CAIO,SAAAC,CAAC,CAAI,CACR,GAAIA,CAAC,CAACH,QAAF,CAAWI,MAAX,GAAsB,GAA1B,CAA8B,CAC1BR,YAAY,CAAC,KAAD,CAAZ,CACH,CACJ,CARD,EADJ,sDADY,0CAYZC,OAAO,GAER,CAdM,CAcJ,CAACL,EAAD,CAdI,CAAT,CAeE,GAAIG,SAAJ,CAAc,CACZ,mBACI,kCACI,KAAC,KAAD,EAEE,EAAE,CAAIF,KAAK,CAACD,EAFd,CAGE,KAAK,CAAI,IAHX,CAIE,KAAK,CAAEC,KAAK,CAACY,KAJf,CAKE,QAAQ,CAAEZ,KAAK,CAACa,QALlB,CAME,KAAK,CAAEb,KAAK,CAACc,KANf,CAOE,MAAM,CAAEd,KAAK,CAACe,MAPhB,CAQE,QAAQ,CAAEf,KAAK,CAACgB,QARlB,CASE,GAAG,CAAEhB,KAAK,CAACiB,GATb,EACQjB,KAAK,CAACD,EADd,CADJ,EADJ,CAeD,CAhBD,IAiBK,CACD,mBAAO,kCAAK,+CAAL,EAAP,CACH,CAEN,CAzCD,CA2CA,cAAeD,CAAAA,eAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport Demot from './Demot';\r\n\r\nconst SinglePageDemot = () => {\r\n    const {id} = useParams();\r\n    const [demot, setDemot] = useState(\"\")\r\n    const [doesExist, setDoesExist] = useState(true)\r\n\r\n    useEffect(() => {\r\n        async function getData(){\r\n            axios.get('/api/' + id +'/')\r\n            .then(function (response) {\r\n                    setDemot(response?.data) \r\n            })\r\n            .catch(e => {\r\n                if (e.response.status === 404){\r\n                    setDoesExist(false)\r\n                }\r\n            })\r\n        }\r\n        getData();\r\n        \r\n      }, [id])\r\n      if (doesExist){\r\n        return (\r\n            <div>\r\n                <Demot\r\n                  key= {demot.id} \r\n                  id = {demot.id}\r\n                  whole = {true}\r\n                  title={demot.title}\r\n                  subtitle={demot.subtitle}  \r\n                  image={demot.image}\r\n                  upvote={demot.upvote}\r\n                  downvote={demot.downvote}\r\n                  ips={demot.ips}\r\n                  />\r\n            </div>\r\n        )\r\n      }\r\n      else {\r\n          return <div><h2>Sorry, it doesn't exist</h2></div>\r\n      }\r\n    \r\n}\r\n\r\nexport default SinglePageDemot\r\n"]},"metadata":{},"sourceType":"module"}